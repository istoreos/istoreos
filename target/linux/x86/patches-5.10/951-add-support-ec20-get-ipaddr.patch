--- a/drivers/net/usb/qmi_wwan.c
+++ b/drivers/net/usb/qmi_wwan.c
@@ -505,6 +505,21 @@ static const u8 buggy_fw_addr[ETH_ALEN]
  * to 00:a0:c6:00:00:00 despite the host address being different.
  * This function will also fixup such packets.
  */
+ struct sk_buff *qmi_wwan_tx_fixup(struct usbnet *dev, struct sk_buff *skb, gfp_t flags)
+{
+	if (dev->udev->descriptor.idVendor != cpu_to_le16(0x2C7C)) return skb;
+	
+	/* Skip Ethernet header from message  */
+	if (skb_pull(skb, ETH_HLEN)) {
+		return skb;
+	} else {
+		dev_err(&dev->intf->dev, "Packet Dropped ");
+	}
+	/* Filter the packet out, release it  */
+	dev_kfree_skb_any(skb);
+	return NULL;
+}
+
 static int qmi_wwan_rx_fixup(struct usbnet *dev, struct sk_buff *skb)
 {
 	struct qmi_wwan_state *info = (void *)&dev->data;
@@ -779,6 +794,20 @@ static int qmi_wwan_bind(struct usbnet *
 	}
 	dev->net->netdev_ops = &qmi_wwan_netdev_ops;
 	dev->net->sysfs_groups[0] = &qmi_wwan_sysfs_attr_group;
+#if 1 /*  Added by Quectel  */
+	if (dev->udev->descriptor.idVendor == cpu_to_le16(0x2C7C)) {
+		dev_info(&intf->dev,  "Quectel  EC25&EC21&EC20R2.0&EG91&EG95&EG06&EP06&EM06&BG96 work on RawIP mode\n");
+		dev->net->flags |= IFF_NOARP;
+		usb_control_msg(
+			interface_to_usbdev(intf),
+			usb_sndctrlpipe(interface_to_usbdev(intf), 0),
+			0x22, /*  USB_CDC_REQ_SET_CONTROL_LINE_STATE  */
+			0x21, /*  USB_DIR_OUT | USB_TYPE_CLASS | USB_RECIP_INTERFACE  */
+			1, /*  active CDC DTR  */
+			intf->cur_altsetting->desc.bInterfaceNumber,
+			NULL, 0, 100);
+	}
+#endif		
 err:
 	return status;
 }
@@ -870,6 +899,7 @@ static const struct driver_info	qmi_wwan
 	.unbind		= qmi_wwan_unbind,
 	.manage_power	= qmi_wwan_manage_power,
 	.rx_fixup       = qmi_wwan_rx_fixup,
+	.tx_fixup       = qmi_wwan_tx_fixup,
 };
 
 static const struct driver_info	qmi_wwan_info_quirk_dtr = {
@@ -879,6 +909,7 @@ static const struct driver_info	qmi_wwan
 	.unbind		= qmi_wwan_unbind,
 	.manage_power	= qmi_wwan_manage_power,
 	.rx_fixup       = qmi_wwan_rx_fixup,
+	.tx_fixup       = qmi_wwan_tx_fixup,
 	.data           = QMI_WWAN_QUIRK_DTR,
 };
 
